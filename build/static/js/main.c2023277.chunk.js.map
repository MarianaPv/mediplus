{"version":3,"sources":["Context/context.js","Components/HomePage/index.js","Routes/Routes.js","Components/Register/Register.js","Components/NavBar/Navigation.js","Components/Stats/userStats.js","Components/Stats/atipicos.js","Components/Stats/graficas.js","Components/Stats/Stats.js","Components/History/Add.js","Components/History/History.js","Components/History/Main.js","App.js","serviceWorker.js","Components/Reducer/userReducer.js","Components/Reducer/index.js","index.js"],"names":["createContext","withRouter","props","useState","email","setEmail","password","setPassword","cookies","useDispatch","useContext","UserContext","setUserData","Cookies","Ingreso","e","a","preventDefault","alert","Usuario","Axios","post","loginRes","data","_id","console","log","set","path","displayName","get","window","location","href","className","InputLabel","style","fontFamily","color","htmlFor","Input","id","name","autoFocus","onChange","target","value","marginTop","type","onClick","to","passwordCheck","setPasswordCheck","setDisplayName","sendInfo","newUser","response","respuesta","JSON","stringify","length","fontSize","marginLeft","remove","UserStats","Atipicos","EstadisticosDeUsuarioSeleccionado","LaIdDelPaciente","LimDiastolico","parseInt","maxPatientDiastolicPressure","LimSistolico","maxPatientSystolicPressure","indexShower","setIndexShower","showMore","setShowMore","allEvents","setAllEvents","minPatientSystolicPressure","setMinPatientSystolicPressure","setMaxPatientSystolicPressure","minPatientDiastolicPressure","setMinPatientDiastolicPressure","setMaxPatientDiastolicPressure","useEffect","selected","historicPressure","map","index","diastolicPressure","systolicPressure","display","flexDirection","fontWeight","date","substring","indexOf","symptoms","i","condition","Array","isArray","conditions","valores","RegistroDelimites","axios","users","overflow","height","slice","newIndexShower","marginBottom","variant","borderTop","paddingTop","Grafica","GraficaDePresionGeneral","setraficaDePresionGeneral","GraficandoFrecuenciaCardiaca","setGraficandoFrecuenciaCardiaca","GraficandoPeso","setGraficandoPeso","LimiteSliderPresion","setLimiteSliderPresion","LimiteSliderFrecuencia","setLimiteSliderFrecuencia","LimiteSliderPeso","setLimiteSliderPeso","selecto","prueba","lastName","PermitirSlider","setPermitirSlider","ValorPresion","setValorPresion","LimitePresion","setLimitePresion","LargoDeLosDatosPresion","historicWeight","GraficaFrecuenciaCardiaca","GraficaPeso","MarcaPresion","setMarcaPresion","GraficaPresion","marksPresion","DatosPresionDiastolica","DatosPresionSistolica","Fechas","LimiteSistolica","LimiteDiastolica","err","x","valor","numero","Hora","tiempo","substr","push","labels","datasets","label","borderWidth","borderColor","backgroundColor","lineTension","pointBackgroundColor","pointBorderColor","DatosFrecuenciaCardiaca","historicHeartFreq","heartFreq","LimiteFrecuencia","DatosPeso","weight","LimitePeso","marksFrecuencia","setLimiteFrecuencia","marksPeso","setLimitePeso","padding","background","borderRadius","webkitBoxShadow","width","border","options","responsive","title","text","scales","yAxes","ticks","beginAtZero","xAxes","minRotation","margin","Slider","defaultValue","max","step","marks","Todos","setTodos","Paciente","setPaciente","setValor","getUserInfo","config","headers","res","Cambio","usuario","estado","columns","field","cellStyle","borderBottom","actions","icon","tooltip","event","rowData","Seleccionado","escogido","filter","PacienteSelecto","headerStyle","actionsCellStyle","actionsColumnIndex","rowStyle","pageSize","localization","header","LaTablaSuprema","setLastName","sex","setSex","ocupation","setOcupation","country","setCountry","city","setCity","currentCity","setCurrentCity","address","setAddress","phone","setPhone","pastSurgery","setPastSurgery","contactName","setContactName","contactLastName","setContactLastName","contactPhone","setContactPhone","docuId","setDocuId","Date","startDate","setStartDate","bornDate","setBornDate","toString","userName","minDiastolicPressure","maxDiastolicPressure","minSystolicPressure","maxSystolicPressure","TextField","Select","native","handleSex","aria-label","cursor","placeholderText","justifyContent","userData","traigoPacientes","Pacienteseleccionado","setPacienteseleccionado","userInfo","useSelector","state","setDoctorData","token","Add","elemento","handleAddrTypeChange","isHistoryOpen","setIsHistoryOpen","gridTemplateColumns","App","undefined","user","Provider","CssBaseline","basename","exact","component","HomePage","Register","Stats","History","Boolean","hostname","match","initialState","currentUser","loading","allReducer","combineReducers","action","payload","store","createStore","_REDUX_DEVTOOLS_EXTENSION_","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c2023277.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport default createContext(null);\n","import React, { useState, useContext } from \"react\";\nimport { Input, InputLabel } from \"@material-ui/core\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport \"./index.css\";\nimport * as ROUTES from \"../../Routes/Routes.js\";\nimport UserContext from \"../../Context/context\";\nimport Axios from \"axios\";\nimport submit from \"./GetUser\";\nimport Cookies from 'universal-cookie';\n\n\nfunction HomePage(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState();\n  const [token, setToken] = useState(\"\");\n  const dispatch = useDispatch();\n\n\n  const { setUserData } = useContext(UserContext);\n  const cookies = new Cookies();\n\n  \n//PUNTO DE REFERENCIA II\nconst Ingreso = async (e)=>{\n  try{\n    e.preventDefault();\n    if (!email || !password)\n    return alert(\"faltan campos por llenar\");\n\n//PUNTO DE REFERENCIA III\n    const Usuario = {email,password};\n    const loginRes = await Axios.post(\n      \"http://ec2-18-218-144-116.us-east-2.compute.amazonaws.com/users/login\",\n      Usuario\n    )\n    //Verificación de usuario y contraseña\n\n    if(loginRes.data._id){\n      console.log(\"Entraste\")\n      console.log(loginRes.data)\n      cookies.set('id',loginRes.data._id, {path : \"/\"})\n      cookies.set('displayName',loginRes.data.displayName, {path : \"/\"})\n      alert(\"bienvenido \" + loginRes.data.displayName)\n      if(cookies.get('id')){\n        window.location.href=\"./estadisticas\";\n      }\n    }else{\n      alert(\"Usuario o contraseña incorrectos\")\n    }\n\n    // console.log(email)\n    // console.log(password)\n  }catch(err){\n    console.log(err)\n  }\n}\n\n  //Punto de referencia I\n  return ( \n    <div className=\"body\">\n      <div className=\"square\">\n        <div className=\"content\">BIENVENIDO</div>\n        <div className=\"form22\">\n\n\n          <div>\n            <InputLabel\n              style={{ fontFamily: \"Jost\", color: \"black\" }}\n              htmlFor=\"email\"\n            >\n              Correo Electrónico\n            </InputLabel>\n            <Input\n              id=\"email\"\n              name=\"email\"\n              autoFocus\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n\n          <div style={{ marginTop: \"2.5vh\" }}>\n            <InputLabel\n              style={{ fontFamily: \"Jost\", color: \"black\" }}\n              htmlFor=\"password\"\n            >\n              Contraseña\n            </InputLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n\n     \n            <button\n              className=\"button\" onClick={Ingreso}\n            >\n              {\" \"}\n              INGRESAR\n            </button>\n\n\n\n          <div className=\"member\">\n            ¿No eres miembro?\n            <Link to={ROUTES.REGISTER}>\n              <button className=\"link\">Registrate aquí</button>\n            </Link>\n          </div>\n\n          \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(HomePage);\n","export const HOMEPAGE = \"/\";\nexport const REGISTER = \"/registro\";\nexport const STATS = \"/estadisticas\";\nexport const HISTORIA = \"/historia-clinica\";\n","import React, { useState, useContext } from \"react\";\nimport { Input, InputLabel } from \"@material-ui/core\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as ROUTES from \"../../Routes/Routes.js\";\nimport UserContext from \"../../Context/context\";\nimport \"./Register.css\";\nimport Axios from \"axios\";\n\n// Punto de referencia I\nfunction SignIn(props) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n \n  const sendInfo = async (e) => {\n  try{\n    e.preventDefault();\n    const newUser = { email, password, passwordCheck, displayName };\n    const response = await Axios.post(\n      \"http://ec2-18-218-144-116.us-east-2.compute.amazonaws.com/users/register\",\n      newUser\n    );\n\n    var respuesta = JSON.stringify(response.data)\n    if(respuesta.length >50){\n      var respuesta = \"El usuario se ha registrado con éxito, por favor, revisa tu correo electrónico\"\n    }\n    alert(respuesta)\n\n    console.log(response.data)\n  }\n  catch(err){\n    console.log(err)\n  }\n  };\n\n  return (\n    <div className=\"body2\">\n      <div className=\"square2\">\n        <div className=\"content2\">REGISTRO</div>\n        <div className=\"form2\">\n\n\n          <div>\n            <InputLabel\n              style={{ fontFamily: \"Jost\", color: \"black\", fontSize: \"14.5px\" }}\n              htmlFor=\"nombre\"\n            >\n              Nombre de Usuario\n            </InputLabel>\n            <Input\n              id=\"displayName\"\n              onChange={(e) => setDisplayName(e.target.value)}\n            />\n          </div>\n\n\n          <div style={{ marginTop: \"1.5vh\" }}>\n            <InputLabel\n              style={{ fontFamily: \"Jost\", color: \"black\", fontSize: \"14.5px\" }}\n              htmlFor=\"email\"\n            >\n              Correo Electrónico\n            </InputLabel>\n            <Input\n              id=\"email\"\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n\n          <div style={{ marginTop: \"1.5vh\" }}>\n            <InputLabel\n              style={{ fontFamily: \"Jost\", color: \"black\", fontSize: \"14.5px\" }}\n              htmlFor=\"password\"\n            >\n              Contraseña\n            </InputLabel>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </div>\n\n\n          <div style={{ marginTop: \"1.5vh\" }}>\n            <InputLabel\n              style={{ fontFamily: \"Jost\", color: \"black\", fontSize: \"14.5px\" }}\n              htmlFor=\"password\"\n            >\n              Confirma tu Contraseña\n            </InputLabel>\n            <Input\n              type=\"password\"\n              id=\"check-password\"\n              onChange={(e) => setPasswordCheck(e.target.value)}\n            />\n          </div>\n\n\n          <Link to={ROUTES.HOMEPAGE}>\n            <button className=\"button2\" onClick={sendInfo}>\n              REGISTRARSE\n            </button>\n          </Link>\n\n          <Link to={ROUTES.HOMEPAGE}>\n            <button className=\"button3\">IR ATRÁS</button>\n          </Link>\n          \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(SignIn);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as ROUTES from \"../../Routes/Routes.js\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Navigation.css\";\nimport Cookies from 'universal-cookie';\nconst cookies = new Cookies();\n\n//Punto de referencia \n\nfunction Navigation(props) {\n  const CerrarSesion = ()=>{\n    cookies.remove('id', {path : \"/\"})\n    cookies.remove('displayName',{path : \"/\"})\n    window.location.href=\"/\"\n  }\n  return (\n    <div className=\"bodyy\">\n      <section>\n        <header>\n          <div className=\"navBox\">\n            <ul className=\"extra\">\n              <li style={{ marginLeft: \"50vw\" }}>\n                <Link to={ROUTES.STATS}>Estadísticas</Link>\n              </li>\n              <li>\n                <Link to={ROUTES.HISTORIA}>Historia Clínica</Link>\n              </li>\n              <Link >\n                <button className=\"logout\" onClick ={CerrarSesion}>Cerrar Sesión</button>\n              </Link>\n            </ul>\n          </div>\n        </header>\n      </section>\n    </div>\n  );\n}\nexport default withRouter(Navigation);\n","import React, { useState, useEffect } from \"react\";\n\nfunction UserStats(selected) {\n  console.log(selected, \"ya\");\n\n  if (selected !== undefined) {\n    return (\n      <div\n        style={{\n          height: \"12vh\",\n          backgroundColor: \"red\",\n        }}\n      ></div>\n    );\n  }\n}\n\nexport default UserStats;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Navigation from \"../NavBar/Navigation\";\r\nimport \"./Stats.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport SearchField from \"react-search-field\";\r\nimport UserStats from \"./userStats\";\r\nimport { LineChart, PieChart } from \"react-chartkick\";\r\nimport {Line, Pie, Doughnut} from 'react-chartjs-2';\r\nimport Cookies from 'universal-cookie';\r\nimport { set } from \"mongoose\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport {Slider} from \"@material-ui/core\"\r\n\r\n\r\nfunction Atipicos(props){\r\nconst EstadisticosDeUsuarioSeleccionado = props.data\r\nconst LaIdDelPaciente = EstadisticosDeUsuarioSeleccionado._id\r\n\r\nconst LimDiastolico = parseInt(EstadisticosDeUsuarioSeleccionado.maxPatientDiastolicPressure)\r\nconst LimSistolico = parseInt(EstadisticosDeUsuarioSeleccionado.maxPatientSystolicPressure)\r\n\r\n  const [indexShower, setIndexShower] = useState(5);\r\n  const [showMore, setShowMore] = useState(true);\r\n  const [allEvents, setAllEvents] = useState();\r\n  const [minPatientSystolicPressure, setMinPatientSystolicPressure] = useState(\r\n    null\r\n  );\r\n  const [maxPatientSystolicPressure, setMaxPatientSystolicPressure] = useState(\r\n    null\r\n  );\r\n  const [\r\n    minPatientDiastolicPressure,\r\n    setMinPatientDiastolicPressure,\r\n  ] = useState(null);\r\n  const [\r\n    maxPatientDiastolicPressure,\r\n    setMaxPatientDiastolicPressure,\r\n  ] = useState(null);\r\n  const [currentUserWeightChartData, setCurrentUserWeightChartData] = useState(\r\n    {}\r\n  );\r\n  const [\r\n    currentUserPressureChartData,\r\n    setCurrentUserPressureChartData,\r\n  ] = useState({})\r\n\r\n\r\n                                useEffect(() => {\r\n                               \r\n                                    const selected = EstadisticosDeUsuarioSeleccionado\r\n                                    console.log(selected)\r\n                                    console.log(LimDiastolico,LimSistolico)\r\n\r\n                                    let allEvents = selected.historicPressure.map((e, index) => {\r\n\r\n                                        return (\r\n                                        <div>\r\n                                            {e.diastolicPressure > LimDiastolico\r\n                                             || e.systolicPressure > LimSistolico? (\r\n                                            <div className=\"event\">\r\n                                                <div\r\n                                                style={{\r\n                                                    display: \"flex\",\r\n                                                    flexDirection: \"row\",\r\n                                                    fontWeight: \"bold\",\r\n                                                }}\r\n                                                >\r\n                                                Evento:\r\n                                                </div>\r\n                                \r\n                                                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                                <div>Fecha:</div>\r\n                                                <div>{e.date.substring(0, e.date.indexOf(\"T\"))}</div>\r\n                                                </div>\r\n                                \r\n                                                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                                <div>Hora:</div>\r\n                                                <div>\r\n                                                    {e.date.substring(\r\n                                                    e.date.indexOf(\"T\") + 1,\r\n                                                    e.date.indexOf(\".\")\r\n                                                    )}\r\n                                                </div>\r\n                                                </div>\r\n                                \r\n                                                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                                <div>Presión sistólica:</div>\r\n                                                <div>{e.systolicPressure}</div>\r\n                                                </div>\r\n                                \r\n                                                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                                <div>Presión diastólica:</div>\r\n                                                <div>{e.diastolicPressure}</div>\r\n                                                </div>\r\n                                \r\n                                                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                                {e.symptoms\r\n                                                    ? e.symptoms.map((symptoms, i) => {\r\n                                                        return (\r\n                                                        <div\r\n                                                            style={{ display: \"flex\", flexDirection: \"row\" }}\r\n                                                        >\r\n                                                            <div>Síntomas:</div>\r\n                                                            <div>{symptoms}</div>\r\n                                                        </div>\r\n                                                        );\r\n                                                    })\r\n                                                    : null}\r\n                                                </div>\r\n                                \r\n                                                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                                {e.condition ? (\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                                    <div>Condiciones:</div>\r\n                                \r\n                                                    {Array.isArray(e.condition) ? (\r\n                                                        e.condition.map((conditions, i) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                            style={{\r\n                                                                display: \"flex\",\r\n                                                                flexDirection: \"column\",\r\n                                                            }}\r\n                                                            >\r\n                                                            <div>{conditions}</div>\r\n                                                            </div>\r\n                                                        );\r\n                                                        })\r\n                                                    ) : (\r\n                                                        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                                        <div>En reposo</div>\r\n                                                        </div>\r\n                                                    )}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                                </div>\r\n                                            </div>\r\n                                            ) : null}\r\n                                        </div>\r\n                                        );\r\n                                    });\r\n                                    setAllEvents(allEvents);\r\n                                    console.log(allEvents, \"eventos\");\r\n                                    // }\r\n                                }, []);\r\n\r\n\r\n                            const handleShowMore = () => {\r\n                                const newIndexShower = indexShower + 4;\r\n                                if (newIndexShower >= allEvents.length) {\r\n                                setIndexShower(allEvents.length);\r\n                                setShowMore(false);\r\n                                } else {\r\n                                setIndexShower(newIndexShower);\r\n                                }\r\n                            };\r\n                            \r\n                            useEffect(() => {\r\n                                if (allEvents) {\r\n                                if (allEvents.length > 5) {\r\n                                    setShowMore(true);\r\n                                } else {\r\n                                    setShowMore(false);\r\n                                }\r\n                                }\r\n                            }, [allEvents]);\r\n\r\n                            //Aquí hago el post para guardar los datos\r\n\r\n                            const valores= {\r\n                                minPatientSystolicPressure,\r\n                                maxPatientSystolicPressure,\r\n                                minPatientDiastolicPressure,\r\n                                maxPatientDiastolicPressure,\r\n                                LaIdDelPaciente                               \r\n                            }\r\n\r\n                            const RegistroDelimites = async() =>{\r\n                                try{\r\n                                    const response = await axios.post(\r\n                                        //Este es mi punto de ref..\r\n                                        \"http://ec2-18-218-144-116.us-east-2.compute.amazonaws.com/userApps/ActualizandoLimites\",valores\r\n                                      );\r\n                                      alert(response.data.users)\r\n\r\n                            }catch (err) {\r\n                                alert(\"Lo siento, por el momento no puede actualizar datos\")\r\n                            }\r\n                        }\r\n\r\n                            //Aquí hago el post para guardar los datos\r\n    return (\r\n                    <div>\r\n                        <div className=\"card2\">\r\n                            <div className=\"titleEvent\">EVENTOS ATÍPICOS:</div>\r\n                            <div style={{ overflow: \"auto\", height: \"30vh\" }}>\r\n                                {\" \"}\r\n                                {allEvents\r\n                                ? allEvents.slice(0, indexShower)\r\n                                : \"Aún no hay eventos\"}\r\n                            </div>\r\n                            {showMore && (\r\n                                <div onClick={handleShowMore} className=\"showMore\">\r\n                                Mostrar más{\" \"}\r\n                                </div>\r\n                            )}\r\n                            </div>\r\n                            <div className=\"card2\" style={{ height: \"40vh\" }}>\r\n                            <div className=\"titleEvent\" style={{ marginTop: \"3vh\" }}>\r\n                                MODIFICAR UMBRALES DE PACIENTE:\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"row\",\r\n                                fontFamily: \"Jost\",\r\n                                marginBottom: \"3vh\",\r\n                                }}\r\n                            >\r\n                                <div\r\n                                style={{\r\n                                    fontSize: \"13px\",\r\n                                    fontWeight: \"bold\",\r\n                                    fontFamily: \"Jost\",\r\n                                    marginBottom: \"3vh\",\r\n                                }}\r\n                                >\r\n                                Presión Sistólica\r\n                                </div>\r\n                                <div style={{ marginLeft: \"20px\", color: \"gray\" }}>\r\n                                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                    <div>mín:</div>{\" \"}\r\n                                    <input\r\n                                    variant=\"outlined\"\r\n                                    className=\"smallInput\"\r\n                                    value={minPatientSystolicPressure}\r\n                                    onChange={(e) =>\r\n                                        setMinPatientSystolicPressure(e.target.value)\r\n                                    }\r\n                                    />\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"row\",\r\n                                    marginTop: \"1vh\",\r\n                                    }}\r\n                                >\r\n                                    <div>máx:</div>{\" \"}\r\n                                    <input\r\n                                    variant=\"outlined\"\r\n                                    className=\"smallInput\"\r\n                                    value={maxPatientSystolicPressure}\r\n                                    onChange={(e) =>\r\n                                        setMaxPatientSystolicPressure(e.target.value)\r\n                                    }\r\n                                    />\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"row\",\r\n                                fontFamily: \"Jost\",\r\n                                borderTop: \"1px solid lightgray\",\r\n                                paddingTop: \"10px\",\r\n                                }}\r\n                            >\r\n                                <div\r\n                                style={{\r\n                                    fontSize: \"13px\",\r\n                                    fontWeight: \"bold\",\r\n                                    marginBottom: \"3vh\",\r\n                                }}\r\n                                >\r\n                                Presión Diastólica\r\n                                </div>\r\n                                <div style={{ marginLeft: \"20px\", color: \"gray\" }}>\r\n                                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\r\n                                    <div>mín:</div>{\" \"}\r\n                                    <input\r\n                                    variant=\"outlined\"\r\n                                    className=\"smallInput\"\r\n                                    value={minPatientDiastolicPressure}\r\n                                    onChange={(e) =>\r\n                                        setMinPatientDiastolicPressure(e.target.value)\r\n                                    }\r\n                                    />\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"row\",\r\n                                    marginTop: \"1vh\",\r\n                                    }}\r\n                                >\r\n                                    <div>máx:</div>{\" \"}\r\n                                    <input\r\n                                    variant=\"outlined\"\r\n                                    className=\"smallInput\"\r\n                                    value={maxPatientDiastolicPressure}\r\n                                    onChange={(e) =>\r\n                                        setMaxPatientDiastolicPressure(e.target.value)\r\n                                    }\r\n                                    />\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            <button onClick={()=>RegistroDelimites()}>Guardar</button>\r\n                            </div>\r\n                    </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Atipicos;","import React, { useState, useEffect } from \"react\";\r\nimport \"./Stats.css\";\r\nimport { LineChart, PieChart } from \"react-chartkick\";\r\nimport {Line, Pie, Doughnut} from 'react-chartjs-2';\r\nimport {Slider} from \"@material-ui/core\"\r\nimport Atipicos from \"./atipicos\"\r\n\r\n//Marco\r\n\r\nfunction Grafica(props){\r\n\r\n    const [GraficaDePresionGeneral, setraficaDePresionGeneral] = useState([]);\r\n  const [\r\n    GraficandoFrecuenciaCardiaca,\r\n    setGraficandoFrecuenciaCardiaca,\r\n  ] = useState([]);\r\n  const [GraficandoPeso, setGraficandoPeso] = useState([]);\r\n  const [LimiteSliderPresion, setLimiteSliderPresion] = useState(100);\r\n  const [LimiteSliderFrecuencia, setLimiteSliderFrecuencia] = useState(100);\r\n  const [LimiteSliderPeso, setLimiteSliderPeso] = useState(100);\r\n\r\n  const EstadisticosDeUsuarioSeleccionado = props.selecto[0]\r\n//   console.log( props.selecto[0])\r\n  const prueba = props.selecto[0].displayName + \" \" +props.selecto[0].lastName\r\n  \r\nconst [PermitirSlider,setPermitirSlider] = useState(\"\")\r\n\r\nconst [ValorPresion,setValorPresion] = useState(0)\r\nconst [LimitePresion, setLimitePresion] = useState(\"\");\r\n\r\nconst LargoDeLosDatosPresion = EstadisticosDeUsuarioSeleccionado.historicPressure.length\r\nconst LargoDeLosDatosPeso = EstadisticosDeUsuarioSeleccionado.historicWeight.length\r\n\r\nuseEffect(()=>{\r\n    if(LargoDeLosDatosPresion>16){\r\n        setValorPresion(LargoDeLosDatosPresion - 15 )\r\n        \r\n    }else{\r\n        setLimitePresion(LargoDeLosDatosPresion/2)\r\n    }\r\n    setLimitePresion(LargoDeLosDatosPresion - 15 )\r\n\r\n},[])\r\n\r\nuseEffect(()=>{\r\n\r\n    GraficaFrecuenciaCardiaca()\r\n    GraficaPeso()\r\n\r\n},[])\r\n\r\nconst [MarcaPresion,setMarcaPresion] = useState([])\r\nuseEffect(()=>{\r\n\r\n    GraficaPresion()\r\n    setPermitirSlider(1)\r\n    if(ValorPresion>0 && LargoDeLosDatosPresion>16){\r\n        setMarcaPresion(marksPresion[0])\r\n    }else{\r\n        setMarcaPresion(marksPresion[1])\r\n    }\r\n\r\n},[LimitePresion])\r\n\r\n                                        const GraficaPresion = () => {\r\n\r\n                                            let DatosPresionDiastolica = [];\r\n                                            let DatosPresionSistolica = [];\r\n                                            let Fechas = [];\r\n                                            let Sintomas = [];\r\n                                            let LimiteSistolica = [];\r\n                                            let LimiteDiastolica = [];\r\n\r\n                                            try {\r\n                                                if(LargoDeLosDatosPresion>1){\r\n                                                    setLimiteSliderPresion(\r\n                                                        LargoDeLosDatosPresion \r\n                                                    );\r\n                                                }else{\r\n                                                    setLimiteSliderPresion(\r\n                                                        100\r\n                                                    );\r\n                                                }\r\n\r\n                                            } catch (err) {\r\n                                            console.log(\"No se definen límites aun \");\r\n                                            }\r\n\r\n                                            try {\r\n                                            DatosPresionDiastolica = EstadisticosDeUsuarioSeleccionado.historicPressure.map(\r\n                                                (valor) => {\r\n                                                return valor.diastolicPressure;\r\n                                                }\r\n                                            );\r\n                                            DatosPresionSistolica = EstadisticosDeUsuarioSeleccionado.historicPressure.map(\r\n                                                (valor) => {\r\n                                                return valor.systolicPressure;\r\n                                                }\r\n                                            );\r\n                                            Fechas = EstadisticosDeUsuarioSeleccionado.historicPressure.map(\r\n                                                (valor) => {\r\n                                                return valor.date;\r\n                                                }\r\n                                            );\r\n\r\n                                            for (let x in Fechas) {\r\n                                                let numero = Fechas[x].indexOf(\"T\");\r\n                                                let Hora = Fechas[x].slice(numero + 1, numero + 3);\r\n                                                let tiempo = \"AM\";\r\n                                                if (parseInt(Hora, 10) > 12) {\r\n                                                tiempo = \"PM\";\r\n                                                }\r\n                                                Fechas[x] = Fechas[x].substr(0, numero) + \" \" + tiempo;\r\n                                            }\r\n\r\n                                            DatosPresionDiastolica = DatosPresionDiastolica.slice(\r\n                                                LimitePresion,\r\n                                                DatosPresionDiastolica.length\r\n                                            );\r\n                                            DatosPresionSistolica = DatosPresionSistolica.slice(\r\n                                                LimitePresion,\r\n                                                DatosPresionSistolica.length\r\n                                            );\r\n                                            Fechas = Fechas.slice(LimitePresion, Fechas.length);\r\n                                            } catch (err) {\r\n                                            console.log(\"No se puudo\");\r\n                                            }\r\n                                            for (let i = 0; i < DatosPresionDiastolica.length; i++) {\r\n                                            LimiteSistolica.push(EstadisticosDeUsuarioSeleccionado.maxPatientSystolicPressure);\r\n                                            LimiteDiastolica.push(EstadisticosDeUsuarioSeleccionado.maxPatientDiastolicPressure);\r\n                                            }\r\n\r\n                                            try {\r\n                                            setraficaDePresionGeneral({\r\n                                                labels: Fechas,\r\n                                                datasets: [\r\n                                                {\r\n                                                    label: \"PRESIÓN DIASTÓLICA\",\r\n                                                    data: DatosPresionDiastolica,\r\n                                                    borderWidth: 2,\r\n                                                    borderColor: \"rgba(0,66,63,0.6)\",\r\n                                                    backgroundColor: \"rgba(0,0,0,0)\",\r\n                                                    lineTension: 0,\r\n                                                    pointBackgroundColor: \"rgba(0,66,63,0.6)\",\r\n                                                },\r\n                                                {\r\n                                                    label: \"PRESIÓN SISTÓLICA\",\r\n                                                    data: DatosPresionSistolica,\r\n                                                    borderWidth: 2,\r\n                                                    borderColor: \"rgba(0,3,58,0.6)\",\r\n                                                    backgroundColor: \"rgba(0,0,0,0)\",\r\n                                                    pointBackgroundColor: \"rgba(0,3,58,0.6)\",\r\n                                                    lineTension: 0,\r\n                                                },\r\n                                                {\r\n                                                    label: \"LÍMITE SISTÓLICA\",\r\n                                                    data: LimiteSistolica,\r\n                                                    borderWidth: 1,\r\n                                                    borderColor: \"rgba(117,0,0,0.51)\",\r\n                                                    backgroundColor: \"rgba(0,0,0,0)\",\r\n                                                    pointBorderColor: \"rgba(255,255,255,1)\",\r\n                                                    lineTension: 0.1,\r\n                                                },\r\n                                                {\r\n                                                    label: \"LÍMITE DIASTÓLICA\",\r\n                                                    data: LimiteDiastolica,\r\n                                                    borderWidth: 1,\r\n                                                    borderColor: \"rgba(0,0,0,0.5)\",\r\n                                                    backgroundColor: \"rgba(0,0,0,0)\",\r\n                                                    pointBorderColor: \"rgba(255,255,255,1)\",\r\n                                                    lineTension: 0.1,\r\n                                                },\r\n                                                ],\r\n                                            });\r\n                                            } catch (err) {\r\n                                            setraficaDePresionGeneral({\r\n                                                labels: [],\r\n                                                datasets: [\r\n                                                {\r\n                                                    label: \"GRÁFICA PRESIÓN VS TIEMPO\",\r\n                                                    data: [],\r\n                                                    backgroundColor: [\"rgba(75,102,103,0.5)\"],\r\n                                                    borderWidth: 4,\r\n                                                },\r\n                                                ],\r\n                                            });\r\n                                            }\r\n                                        };\r\n                                        //Slider {ORIGEN}\r\n                                        const marksPresion = [[\r\n                                            {\r\n                                            value: 0,\r\n                                            label: \"Mostrar mas datos\",\r\n                                            },\r\n                                            {\r\n                                            value: LimiteSliderPresion,\r\n                                            label: \"Mostrar menos datos\",\r\n                                            },\r\n                                            {\r\n                                                value: ValorPresion,\r\n                                                label: \"Ultima Semana\",\r\n                                                },\r\n                                            \r\n                                        ],[\r\n                                            {\r\n                                            value: 0,\r\n                                            label: \"Mostrar mas datos\",\r\n                                            },\r\n                                            {\r\n                                            value: LimiteSliderPresion,\r\n                                            label: \"Mostrar menos datos\",\r\n                                            },\r\n                                            \r\n                                        ]];\r\n\r\n\r\n\r\n                                        const getValue = (e, value) => {\r\n                                            //console.log(value)\r\n                                            setLimitePresion(value);\r\n                                            try {\r\n                                            setLimiteSliderPresion(\r\n                                                EstadisticosDeUsuarioSeleccionado.historicPressure.length\r\n                                            );\r\n                                            } catch (err) {\r\n                                            setLimiteSliderPresion(100);\r\n                                            }\r\n\r\n                                            GraficaPresion();\r\n                                            //TraigoDatosDePacienteSeleccionado()\r\n                                        };\r\n                                        //Slider {FIN}\r\n                                        //GRÁFICO DE PRESIÓN {fIN}\r\n\r\n                                        //GRÁFICO DE FRECUENCIA CARDIACA {ORIGEN}\r\n\r\n                                        const GraficaFrecuenciaCardiaca = () => {\r\n                                            let DatosFrecuenciaCardiaca = [];\r\n                                            let Fechas = [];\r\n\r\n                                            try {\r\n                                            DatosFrecuenciaCardiaca = EstadisticosDeUsuarioSeleccionado.historicHeartFreq.map(\r\n                                                (valor) => {\r\n                                                return valor.heartFreq;\r\n                                                }\r\n                                            );\r\n                                            Fechas = EstadisticosDeUsuarioSeleccionado.historicHeartFreq.map(\r\n                                                (valor) => {\r\n                                                return valor.date;\r\n                                                }\r\n                                            );\r\n\r\n                                            for (let x in Fechas) {\r\n                                                let numero = Fechas[x].indexOf(\"T\");\r\n                                                let Hora = Fechas[x].slice(numero + 1, numero + 3);\r\n                                                let tiempo = \"AM\";\r\n                                                if (parseInt(Hora, 10) > 12) {\r\n                                                tiempo = \"PM\";\r\n                                                }\r\n                                                Fechas[x] = Fechas[x].substr(0, numero) + \" \" + tiempo;\r\n                                            }\r\n                                            DatosFrecuenciaCardiaca = DatosFrecuenciaCardiaca.slice(\r\n                                                LimiteFrecuencia,\r\n                                                DatosFrecuenciaCardiaca.length\r\n                                            );\r\n                                            Fechas = Fechas.slice(LimiteFrecuencia, Fechas.length);\r\n                                            } catch (err) {\r\n                                            console.log(\"No se puudo\");\r\n                                            }\r\n\r\n                                            try {\r\n                                            setGraficandoFrecuenciaCardiaca({\r\n                                                labels: Fechas,\r\n                                                datasets: [\r\n                                                {\r\n                                                    label: \"FRECUENCIA CARDIACA\",\r\n                                                    data: DatosFrecuenciaCardiaca,\r\n                                                    borderWidth: 2,\r\n                                                    borderColor: \"rgba(0,66,63,0.88)\",\r\n                                                    backgroundColor: \"rgba(0,0,0,0)\",\r\n                                                    lineTension: 0,\r\n                                                    pointBackgroundColor: \"rgba(0,66,63,0.88)\",\r\n                                                },\r\n                                                ],\r\n                                            });\r\n                                            } catch (err) {\r\n                                            setGraficandoFrecuenciaCardiaca({\r\n                                                labels: [],\r\n                                                datasets: [\r\n                                                {\r\n                                                    label: \"FRECUENCIA CARDIACA\",\r\n                                                    data: [],\r\n                                                    backgroundColor: [\"rgba(75,102,103,0.5)\"],\r\n                                                    borderWidth: 4,\r\n                                                },\r\n                                                ],\r\n                                            });\r\n                                            }\r\n                                        };\r\n\r\n                                        //GRÁFICO DE FRECUENCIA CARDIACA {FIN}\r\n\r\n                                        //GRÁFICO DE PESO {ORIGEN}\r\n\r\n                                        const GraficaPeso = () => {\r\n                                            let DatosPeso = [];\r\n                                            let Fechas = [];\r\n                                            \r\n                                            try {\r\n                                            DatosPeso = EstadisticosDeUsuarioSeleccionado.historicWeight.map(\r\n                                                (valor) => {\r\n                                                return valor.weight;\r\n                                                }\r\n                                            );\r\n                                            Fechas = EstadisticosDeUsuarioSeleccionado.historicWeight.map((valor) => {\r\n                                                return valor.date;\r\n                                            });\r\n\r\n                                            for (let x in Fechas) {\r\n                                                let numero = Fechas[x].indexOf(\"T\");\r\n                                                let Hora = Fechas[x].slice(numero + 1, numero + 3);\r\n                                                let tiempo = \"AM\";\r\n                                                if (parseInt(Hora, 10) > 12) {\r\n                                                tiempo = \"PM\";\r\n                                                }\r\n                                                Fechas[x] = Fechas[x].substr(0, numero) + \" \" + tiempo;\r\n                                            }\r\n                                            DatosPeso = DatosPeso.slice(LimitePeso, DatosPeso.length);\r\n                                            Fechas = Fechas.slice(LimitePeso, Fechas.length);\r\n                                            } catch (err) {\r\n                                            console.log(\"No se puudo\");\r\n                                            }\r\n\r\n                                            try {\r\n                                            setGraficandoPeso({\r\n                                                labels: Fechas,\r\n                                                datasets: [\r\n                                                {\r\n                                                    label: \"PESO\",\r\n                                                    data: DatosPeso,\r\n                                                    borderWidth: 2,\r\n                                                    borderColor: \"rgba(0,3,58,0.7)\",\r\n                                                    backgroundColor: \"rgba(0,0,0,0)\",\r\n                                                    lineTension: 0,\r\n                                                    pointBackgroundColor: \"rgba(0,3,58,0.7)\",\r\n                                                },\r\n                                                ],\r\n                                            });\r\n                                            } catch (err) {\r\n                                            setGraficandoPeso({\r\n                                                labels: [],\r\n                                                datasets: [\r\n                                                {\r\n                                                    label: \"PESO\",\r\n                                                    data: [],\r\n                                                    backgroundColor: [\"rgba(75,102,103,0.5)\"],\r\n                                                    borderWidth: 4,\r\n                                                },\r\n                                                ],\r\n                                            });\r\n                                            }\r\n                                        };\r\n\r\n                                        //GRÁFICO DE PESP {FIN}\r\n\r\n                                        \r\n\r\n                                        //SliderFrecuencia {ORIGEN}\r\n\r\n                                        const marksFrecuencia = [\r\n                                            {\r\n                                            value: 0,\r\n                                            label: \"Mostrar mas datos\",\r\n                                            },\r\n                                            {\r\n                                            value: LimiteSliderFrecuencia,\r\n                                            label: \"Mostrar menos datos\",\r\n                                            },\r\n                                        ];\r\n\r\n                                        const [LimiteFrecuencia, setLimiteFrecuencia] = useState(\"\");\r\n\r\n                                        const getValueFrecuencia = (e, value) => {\r\n                                            //console.log(value)\r\n                                            setLimiteFrecuencia(value);\r\n                                            try {\r\n                                            setLimiteSliderFrecuencia(\r\n                                                EstadisticosDeUsuarioSeleccionado.historicHeartFreq.length\r\n                                            );\r\n                                            } catch (err) {\r\n                                            setLimiteSliderFrecuencia(100);\r\n                                            }\r\n\r\n                                            GraficaFrecuenciaCardiaca();\r\n                                            //TraigoDatosDePacienteSeleccionado()\r\n                                        };\r\n                                        //SliderPeso {FIN}\r\n\r\n                                        //SliderFrecuencia {ORIGEN}\r\n\r\n                                        const marksPeso = [\r\n                                            {\r\n                                            value: 0,\r\n                                            label: \"Mostrar mas datos\",\r\n                                            },\r\n                                            {\r\n                                            value: LimiteSliderPeso,\r\n                                            label: \"Mostrar menos datos\",\r\n                                            },\r\n                                        ];\r\n\r\n                                        const [LimitePeso, setLimitePeso] = useState(\"\");\r\n\r\n                                        const getValuePeso = (e, value) => {\r\n                                            //console.log(value)\r\n                                            setLimitePeso(value);\r\n                                            try {\r\n                                                setLimiteSliderPeso(\r\n                                                EstadisticosDeUsuarioSeleccionado.historicWeight.length\r\n                                                );\r\n                                            } catch (err) {\r\n                                            setLimiteSliderPeso(100);\r\n                                            }\r\n\r\n                                            GraficaPeso();\r\n                                            //TraigoDatosDePacienteSeleccionado()\r\n                                        };\r\n                                        //SliderPeso {FIN}\r\n\r\n                                        \r\n\r\n\r\n\r\n\r\n\r\n                                        //AHORA, VOY A HACER LO QUE CREO QUE SE DEBE HACER PARA QUE SE HAGA {INICIO}\r\n                                    \r\n    return(\r\n        <div>\r\n            <div style={{marginLeft: \"30px\", padding:\"4px\", background:\"white\",borderRadius:\"8px\",webkitBoxShadow: \"0 0 10px lightgray\", width:\"30%\", border:\"solid RGBA(0,0,0,0.29) 2px\"}}><h2>Paciente: {prueba} </h2></div>\r\n            <div className=\"chartContainer\">\r\n                <div style={{ width: \"90%\", marginBottom: \"5vh\" }}>\r\n                    <div className=\"Intento\">\r\n                        <div className=\"Estadisticos\">\r\n\r\n                            <div className=\"DePresion\">\r\n                                {PermitirSlider && <Line\r\n                                    data={GraficaDePresionGeneral}\r\n                                    options={{\r\n                                    responsive: true,\r\n                                    title: { text: \"ESTADÍSTICAS DE PRESION\", display: true },\r\n                                    scales: {\r\n                                        yAxes: [\r\n                                        {\r\n                                            ticks: {\r\n                                            beginAtZero: true,\r\n                                            },\r\n                                        },\r\n                                        ],\r\n                                        xAxes: [\r\n                                        {\r\n                                            ticks: {\r\n                                            minRotation: 0,\r\n                                            fontSize: 10,\r\n                                            },\r\n                                        },\r\n                                        ],\r\n                                    },\r\n                                    }}\r\n                                />}\r\n                                <div style={{ width: \"70%\", margin: \"auto\" }}>\r\n                                    {PermitirSlider && <Slider\r\n                                    defaultValue={ValorPresion}\r\n                                    max={LimiteSliderPresion}\r\n                                    step={2}\r\n                                    marks={MarcaPresion}\r\n                                    onChange={getValue}\r\n                                    ></Slider>}\r\n                                </div>\r\n                        </div>\r\n                        <div className=\"Segundos\">\r\n                            <Line\r\n                            data={GraficandoFrecuenciaCardiaca}\r\n                            options={{\r\n                                responsive: true,\r\n                                title: { text: \"FRECUENCIA CARDIACA\", display: true },\r\n                                scales: {\r\n                                yAxes: [\r\n                                    {\r\n                                    ticks: {\r\n                                        beginAtZero: true,\r\n                                    },\r\n                                    },\r\n                                ],\r\n                                },\r\n                            }}\r\n                            />\r\n                            <div style={{ width: \"60%\", margin: \"auto\" }}>\r\n                            <Slider\r\n                                max={LimiteSliderFrecuencia}\r\n                                step={2}\r\n                                marks={marksFrecuencia}\r\n                                onChange={getValueFrecuencia}\r\n                            ></Slider>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Segundos\">\r\n                            <Line\r\n                            data={GraficandoPeso}\r\n                            options={{\r\n                                responsive: true,\r\n                                title: { text: \"PESO\", display: true },\r\n                                scales: {\r\n                                yAxes: [\r\n                                    {\r\n                                    ticks: {\r\n                                        beginAtZero: true,\r\n                                    },\r\n                                    },\r\n                                ],\r\n                                },\r\n                            }}\r\n                            />\r\n\r\n                            <div style={{ width: \"60%\", margin: \"auto\" }}>\r\n                            <Slider\r\n                                max={LimiteSliderPeso}\r\n                                step={2}\r\n                                marks={marksPeso}\r\n                                onChange={getValuePeso}\r\n                            ></Slider>\r\n                            </div>\r\n                        </div>\r\n\r\n                </div>\r\n                </div>\r\n                </div>\r\n\r\n\r\n                <div>\r\n                            <Atipicos data={EstadisticosDeUsuarioSeleccionado}></Atipicos>\r\n                </div>\r\n                </div> \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\n//Marco 2\r\n//Marco 3\r\n\r\nexport default Grafica;","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Navigation from \"../NavBar/Navigation\";\nimport \"./Stats.css\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport SearchField from \"react-search-field\";\nimport UserStats from \"./userStats\";\nimport { LineChart, PieChart } from \"react-chartkick\";\nimport {Line, Pie, Doughnut} from 'react-chartjs-2';\nimport Cookies from 'universal-cookie';\nimport { set } from \"mongoose\";\nimport { red } from \"@material-ui/core/colors\";\nimport {Slider, Modal, TextField, Button} from \"@material-ui/core\"\nimport { keys } from \"@material-ui/core/styles/createBreakpoints\";\nimport MaterialTable from \"material-table\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Grafica from \"./graficas\"\nimport { prototype } from \"chart.js\";\n\n\nconst cookies = new Cookies();\n\n// const useStyles = makeStyles((theme) => ({\n//   modal: {\n//     position: 'absolute',\n//     width: 400,\n//     backgroundColor: theme.palette.background.paper,\n//     border: '2px solid #000',\n//     boxShadow: theme.shadows[5],\n//     padding: theme.spacing(2, 4, 3),\n//     top: '50%',\n//     left: '50%',\n//     transform: 'translate(-50%, -50%)'\n//   },\n//   iconos:{\n//     cursor: 'pointer'\n//   }, \n//   inputMaterial:{\n//     width: '100%'\n//   }\n// }));\n\n\nfunction Stats(props) {\n\n// const [DatosPreDiastolica,setDatosPreDiastolica] = useState(\"\")\n// const [DatosPreSistolica ,setDatosPreSistolica] = useState(\"\")\n// const [Fecha,setFecha] = useState(\"\")\n\n// ESTE ES PARA TRAER EL NOMBRE DE LOS USUARIOS\n\n//Marco de referencia\n// const styles = useStyles()\nconst [Data, setData] = useState([])\nconst [Buscador, setBuscador] = useState(\"\")\n\n\nconst [Todos,setTodos] = useState([])\nconst [Paciente,setPaciente] = useState(\"\")\nconst [valor,setValor]= useState(true)\n\n\nconst getUserInfo = async () => {\n  try {\n    const config = {\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    };\n    const res = await axios.get(\n      \"http://ec2-18-218-144-116.us-east-2.compute.amazonaws.com/userapps/stadisticas\",\n      config\n    );\n    setTodos(res.data.users);\n    console.log(\"Estoy trayendo de la base de AWS\")\n    console.log(res.data.users)\n  } catch (err) {\n    alert(err);\n  }\n};\n\nuseEffect(() => {\n  getUserInfo();\n}, []);\n\n// useEffect(()=>{\n//   search(Todos)\n// },[Buscador])\n\n        //FUNCIÓN QUE TRAE LA TABLA {INICIO}\n\n                // const Datatable = () =>{ \n                //   if(Data.length == 0){\n                //     setData(Todos)\n                //   }\n                //   const columns = Data[0] && Object.keys(Data[0])\n                //   return <div>\n                //   <table cellPadding={0} cellSpacing={0}>\n                //     <thead>\n                //       <tr>{Data[0] && <th>Nombres</th>}\n                //           {Data[0] && <th>Apellidos</th>}\n                //           {Data[0] && <th>Documento de Identidad</th>}\n                //           {Data[0] && <th>Presión</th>}\n                //           {Data[0] && <th>Estado</th>}\n                //           {Data[0] && <th>Búsqueda</th>}\n                //       </tr>\n                //     </thead>\n                //     <tbody>\n\n                //       {Data.map(row => <tr>\n                //           <th>{row.displayName}</th>\n                //           <th>{row.lastName}</th>\n                //           <th>{row.docuId}</th>\n                //           <th>{row.pressure}</th>\n                //           <th>---</th>\n                //           <th><button onClick={()=>PacienteSelecto(row._id)}>Buscar Paciente</button></th>\n                //       </tr> )}\n\n                //     </tbody> \n\n\n                //   </table>z\n                  \n                //   {/* {<ul>{Data.map(usuario=><li>{usuario.displayName}</li>)}</ul>} */}\n                // </div>\n                // }\n\n                const LaTablaSuprema = () =>{\n                  const data = Todos\n                  data.map(usuario=>usuario.estado = \"---\")\n                  const columns = [\n                    {\n                      title:\"Nombre\",\n                      field:\"displayName\",\n                      cellStyle: {\n                        backgroundColor: 'white',\n                        color: \"black\",\n                        border:\"solid white 1px\",\n                        fontFamily:\"sans-serif\",\n                        fontSize:\"15px\",\n                        fontWeight: \"bold\",\n                        borderBottom: \"solid RGBA(4,72,99,0.47) 1px\"\n                      },\n                    },\n                    {\n                      title:\"Apellido\",\n                      field:\"lastName\",\n                      cellStyle:{\n                        backgroundColor: \"white\",\n                        border:\"solid white 1px\",\n                        fontFamily:\"sans-serif\",\n                        fontSize:\"15px\",\n                        fontWeight: \"bold\",\n                        borderBottom: \"solid RGBA(4,72,99,0.47) 1px\"\n                      }\n                    },\n                    {\n                      title:\"Documento de identidad\",\n                      field:\"docuId\",\n                      cellStyle:{\n                        backgroundColor: \"white\",\n                        border:\"solid white 1px\",\n                        borderBottom: \"solid RGBA(4,72,99,0.47) 1px\"\n                      }\n                    },\n                    {\n                      title:\"Corre electrónico\",\n                      field:\"email\",\n                      cellStyle:{\n                        backgroundColor: \"white\",\n                        border:\"solid white 1px\",\n                        borderBottom: \"solid RGBA(4,72,99,0.47) 1px\"\n                      }\n                    },\n                    {\n                      title:\"Verificado\",\n                      field:\"verified\",\n                      cellStyle:{\n                        backgroundColor: \"white\",\n                        border:\"solid white 1px\",\n                        borderBottom: \"solid RGBA(4,72,99,0.47) 1px\"\n                        \n                      } \n                    },\n                    {\n                      title:\"estado\",\n                      field:\"estado\",\n                      cellStyle:{\n                        backgroundColor: \"white\",\n                        border:\"solid white 1px\",\n                        borderBottom: \"solid RGBA(4,72,99,0.47) 1px\"\n                      } \n                    }\n                  ]\n                  return <MaterialTable title=\"Lista de Pacientes\"\n                    columns={columns}\n                    data={data}\n                    style={{width:\"87%\", margin:\"auto\", marginTop:\"2%\", marginBottom:\"2%\", border: \"solid RGBA(4,72,99,0.68) 1px\"}}\n                    actions={[\n                      {\n                      icon : \"search\",\n                      tooltip:\"Ver datos estadísticos\",\n                      onClick: (event,rowData) => PacienteSelecto(rowData._id)\n                    }\n                    ]}\n\n                    options={{\n                      headerStyle: {\n                        backgroundColor: \"RGBA(4,72,99,0.68)\",\n                        color: '#FFF',\n                        border:\"solid white 1px\",\n                        fontSize: \"16px\",\n                        fontFamily:\"sans-serif\",\n                        fontWeight: \"bold\",\n                      },\n\n                      actionsCellStyle:{\n                        border:\"solid white 1px\",\n                        backgroundColor: 'white',\n                        color: \"black\",\n                        borderBottom: \"solid RGBA(4,72,99,0.47) 1px\" \n                      },\n\n                      actionsColumnIndex: -1,\n                      rowStyle: {\n                        border:\"solid white 1px\"\n                      },\n                      pageSize: 5,\n                    }}\n                    localization={{\n                      header:{\n                        actions: \"Ver más\"\n                      }\n                    }}\n                  ></MaterialTable>\n                }\n        \n                const Preparo = () =>{\n                  // console.log(Paciente[0].displayName)\n                  return <div style={{background:\"whitesmoke\" }}>\n                    <div className=\"Lista\">\n                      <button onClick={()=>Cambio()}>volver a la Lista</button>\n                    </div>\n                    <Grafica selecto = {Paciente}></Grafica>\n                  \n                    \n                  </div>\n                }\n        \n        //FUNCIÓN QUE TRAE LA TABLA {FIN}\n        function PacienteSelecto(Seleccionado){\n          const escogido = Todos.filter(usuario => usuario._id == Seleccionado)\n          console.log(escogido)\n          setPaciente(escogido)\n          Cambio()\n        }\n        function Cambio(){\n          setValor(!valor)\n        }\n\n        // function search(rows) {\n        //   const l= rows.filter(row=> row.displayName.toLowerCase().indexOf(Buscador)>-1\n        //                   || row.lastName.toLowerCase().indexOf(Buscador)>-1\n        //   )\n        //   setData(l)\n        // }\n\nreturn (\n  <div\n  style={{\n    width: \"100vw\",\n    height: \"100vh\",\n  }}\n>   <Navigation />\n    <div className=\"blue\">\n        <div className=\"content1\">Cuidandonos Mutuamente.</div>\n        <div className=\"content2\">\n          Aquí podrás conocer las estadísticas de los pacientes a través del\n          tiempo.\n        </div>\n    </div>\n    <div style={{margin:\"5px\"}}>\n      {/* <div style={{display:\"inline-block\"}}>Buscar Paciente:</div>\n      <input style={{margin:\"10px\"}}type=\"text\" value={Buscador} onChange={(e) => setBuscador(e.target.value)}></input> */}\n    </div>\n    <div>\n    {valor && <div>{Todos.length>0 && LaTablaSuprema()}</div>}\n    </div>\n\n    <div>\n    {!valor && <div>{Paciente.length>0 && Preparo()}</div>}\n    </div>\n</div>\n    \n  );\n\n  //MARCA DE RETORNO DE INICIO\n}\n\nexport default withRouter(Stats);\n","import React, { useState, useEffect } from \"react\";\nimport { Input, InputLabel } from \"@material-ui/core\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as ROUTES from \"../../Routes/Routes.js\";\nimport Navigation from \"../NavBar/Navigation\";\nimport \"./Main.css\";\nimport Axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { TextField } from \"@material-ui/core\";\nimport Select from \"@material-ui/core/Select\";\nimport { set } from \"mongoose\";\nimport DatePicker from \"react-datepicker\";\nimport \"../../../node_modules/react-datepicker/dist/react-datepicker.css\";\n\nconst cookies = new Cookies();\n//PUNTO DE PRUEBA\n\nfunction History(props) {\n  if (!cookies.get(\"id\")) {\n    window.location.href = \"/\";\n  }\n\n  const [email, setEmail] = useState(null);\n  const [displayName, setDisplayName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [sex, setSex] = useState();\n  const [ocupation, setOcupation] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [city, setCity] = useState(null);\n  const [currentCity, setCurrentCity] = useState(null);\n  const [address, setAddress] = useState(null);\n  const [phone, setPhone] = useState(null);\n  const [pastSurgery, setPastSurgery] = useState(null);\n  const [contactName, setContactName] = useState(null);\n  const [contactLastName, setContactLastName] = useState(null);\n  const [contactPhone, setContactPhone] = useState(null);\n  const [docuId, setDocuId] = useState(null);\n  const [minPatientSystolicPressure, setMinPatientSystolicPressure] = useState(\n    null\n  );\n  const [maxPatientSystolicPressure, setMaxPatientSystolicPressure] = useState(\n    null\n  );\n  const [\n    minPatientDiastolicPressure,\n    setMinPatientDiastolicPressure,\n  ] = useState(null);\n  const [\n    maxPatientDiastolicPressure,\n    setMaxPatientDiastolicPressure,\n  ] = useState(null);\n\n  const [startDate, setStartDate] = useState(new Date());\n\n  const [bornDate, setBornDate] = useState(null);\n\n  useEffect(() => {\n    if (startDate) {\n      setBornDate(\n        startDate.toString().substring(0, startDate.toString().indexOf(\":\") - 3)\n      );\n    } else {\n      setStartDate(new Date());\n    }\n  }, [startDate]);\n\n  const sendInfo = async (e) => {\n    e.preventDefault();\n    const newUser = {\n      email,\n      password,\n      passwordCheck: password,\n      displayName,\n      lastName,\n      userName: email,\n      sex,\n      bornDate,\n      ocupation,\n      country,\n      city,\n      currentCity,\n      address,\n      phone,\n      pastSurgery,\n      contactName,\n      contactLastName,\n      contactPhone,\n      docuId: docuId,\n      minPatientDiastolicPressure,\n      maxPatientDiastolicPressure,\n      minPatientSystolicPressure,\n      maxPatientSystolicPressure,\n      minDiastolicPressure: \"110\",\n      maxDiastolicPressure: \"90\",\n      minSystolicPressure: \"70\",\n      maxSystolicPressure: \"140\",\n    };\n\n    const response = await Axios.post(\n      //Este es mi punto de ref..\n      \"http://ec2-18-218-144-116.us-east-2.compute.amazonaws.com/userApps/register\",\n      newUser\n    );\n    var respuesta = JSON.stringify(response.data);\n    if (respuesta.length > 50) {\n      var respuesta =\n        \"El usuario se ha registrado con éxito, por favor, revisa tu correo electrónico\";\n    }\n    alert(respuesta);\n\n    setEmail(null);\n    setLastName(null);\n    setMaxPatientDiastolicPressure(null);\n    setMaxPatientSystolicPressure(null);\n    setMinPatientDiastolicPressure(null);\n    setMinPatientSystolicPressure(null);\n    setAddress(null);\n    setCity(null);\n    setContactLastName(null);\n    setContactPhone(null);\n    setContactName(null);\n    setCountry(null);\n    setCity(null);\n    setCurrentCity(null);\n    setDocuId(null);\n    setOcupation(null);\n    setPastSurgery(null);\n    setPhone(null);\n  };\n\n  const handleSex = (e) => {\n    setSex(e.target.value);\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"220vh\",\n        backgroundColor: \"whitesmoke\",\n        display: \"flex\",\n        flexDirection: \"row\",\n      }}\n    >\n      <div>\n        <div className=\"nombres1\">\n          Complete el siguiente formulario de historia clínica para tener\n          información detallada del paciente.\n        </div>\n        <div className=\"sectionTitle\">Información de cuenta:</div>\n\n        <div className=\"form\">\n          <div style={{ height: 100 }}>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              htmlFor=\"email\"\n            >\n              Correo Electrónico\n            </InputLabel>\n            <TextField\n              id=\"email\"\n              variant=\"outlined\"\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"nombres1\"\n              style={{ width: 300, marginBottom: 10 }}\n            />\n          </div>\n\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              htmlFor=\"password\"\n              className=\"nombres1\"\n            >\n              Contraseña\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              style={{ width: 300 }}\n            />\n          </div>\n        </div>\n\n        <div className=\"sectionTitle\">Datos personales:</div>\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              htmlFor=\"email\"\n              className=\"nombres1\"\n            >\n              Nombres\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              onChange={(e) => setDisplayName(e.target.value)}\n              style={{ width: 300, marginBottom: 20 }}\n            />\n          </div>\n          <div>\n            <div>\n              <InputLabel\n                style={{\n                  fontFamily: \"Jost\",\n                  color: \"black\",\n                  fontSize: \"14.5px\",\n                  margin: 5,\n                }}\n                className=\"nombres1\"\n              >\n                Apellidos\n              </InputLabel>\n\n              <TextField\n                variant=\"outlined\"\n                onChange={(e) => setLastName(e.target.value)}\n                style={{ width: 300, marginBottom: 50 }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Documento de identidad (sin puntos){\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              onChange={(e) => setDocuId(e.target.value)}\n              style={{ width: 300, marginBottom: 50 }}\n            />\n          </div>\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Sexo\n            </InputLabel>\n            <Select\n              native\n              onChange={(e) => handleSex(e)}\n              style={{ width: 300, marginBottom: 50 }}\n            >\n              <option aria-label=\"Seleccionar\" value=\"Seleccionar\" />\n              <option value={\"Femenino\"} style={{ cursor: \"pointer\" }}>\n                Femenino\n              </option>\n              <option value={\"Masculino\"} style={{ cursor: \"pointer\" }}>\n                Masculino\n              </option>\n            </Select>\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Fecha de Nacimiento (MM/DD/YY){\" \"}\n            </InputLabel>\n\n            <DatePicker\n              selected={startDate}\n              placeholderText=\"MM/DD/YY\"\n              onChange={(date) => setStartDate(date)}\n              style={{ width: 300, marginBottom: 50, height: \"5vh\" }}\n            />\n          </div>\n\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Ocupación{\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              onChange={(e) => setOcupation(e.target.value)}\n              style={{ width: 300, marginBottom: 50 }}\n            />\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              País de Nacimiento\n            </InputLabel>\n\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              onChange={(e) => setCountry(e.target.value)}\n            />\n          </div>\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Ciudad de Nacimiento\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              onChange={(e) => setCity(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Ciudad Actual\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={currentCity}\n              onChange={(e) => setCurrentCity(e.target.value)}\n            />\n          </div>\n\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Dirección de Domicilio\n            </InputLabel>\n\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Teléfono / Celular\n            </InputLabel>\n\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"sectionTitle\">Antecedentes del paciente:</div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Cirugías Anteriores{\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              onChange={(e) => setPastSurgery(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"sectionTitle\">Datos de contacto:</div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Nombres{\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              onChange={(e) => setContactName(e.target.value)}\n            />\n          </div>\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Apellidos\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              onChange={(e) => setContactLastName(e.target.value)}\n            />\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Teléfono / Celular{\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              onChange={(e) => setContactPhone(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"form\" style={{ justifyContent: \"center\" }}>\n          <button className=\"buttonstat3\" onClick={sendInfo}>\n            GUARDAR DATOS\n          </button>\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <div\n          style={{\n            fontSize: \"18px\",\n            fontWeight: \"bold\",\n            color: \"rgb(83, 142, 194)\",\n            fontFamily: \"Jost\",\n            marginBottom: \"3vh\",\n          }}\n        >\n          Defina los umbrales de presión para el paciente:\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            fontFamily: \"Jost\",\n            marginBottom: \"3vh\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"15px\",\n              fontWeight: \"bold\",\n              fontFamily: \"Jost\",\n              marginBottom: \"3vh\",\n            }}\n          >\n            Presión Sistólica\n          </div>\n          <div style={{ marginLeft: \"20px\", color: \"gray\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div>mín:</div>{\" \"}\n              <input\n                variant=\"outlined\"\n                className=\"smallInput\"\n                value={minPatientSystolicPressure}\n                onChange={(e) => setMinPatientSystolicPressure(e.target.value)}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                marginTop: \"1vh\",\n              }}\n            >\n              <div>máx:</div>{\" \"}\n              <input\n                variant=\"outlined\"\n                className=\"smallInput\"\n                value={maxPatientSystolicPressure}\n                onChange={(e) => setMaxPatientSystolicPressure(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            fontFamily: \"Jost\",\n            borderTop: \"1px solid lightgray\",\n            paddingTop: \"10px\",\n          }}\n        >\n          <div\n            style={{\n              fontSize: \"15px\",\n              fontWeight: \"bold\",\n              marginBottom: \"3vh\",\n            }}\n          >\n            Presión Diastólica\n          </div>\n          <div style={{ marginLeft: \"20px\", color: \"gray\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n              <div>mín:</div>{\" \"}\n              <input\n                variant=\"outlined\"\n                className=\"smallInput\"\n                value={minPatientDiastolicPressure}\n                onChange={(e) => setMinPatientDiastolicPressure(e.target.value)}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                marginTop: \"1vh\",\n              }}\n            >\n              <div>máx:</div>{\" \"}\n              <input\n                variant=\"outlined\"\n                className=\"smallInput\"\n                value={maxPatientDiastolicPressure}\n                onChange={(e) => setMaxPatientDiastolicPressure(e.target.value)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(History);","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Input, InputLabel } from \"@material-ui/core\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as ROUTES from \"../../Routes/Routes.js\";\nimport Navigation from \"../NavBar/Navigation\";\nimport \"./Main.css\";\nimport Select from \"react-select\";\nimport axios from \"axios\";\nimport { set } from \"mongoose\";\nimport \"./History.css\";\nimport { useSelector } from \"react-redux\";\nimport { TextField } from \"@material-ui/core\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\n// PUNTO DE REFERENCIA\nfunction History(props) {\n  //TRAYENDO PACIENTES {Inicio}\n  useEffect(() => {\n    if (!cookies.get(\"id\")) {\n      window.location.href = \"/\";\n    }\n\n    const traigoPacientes = async () => {\n      try {\n        const res = await axios.get(\n          \"http://ec2-18-218-144-116.us-east-2.compute.amazonaws.com/userapps/clinica\"\n        );\n\n        setUserData(res.data);\n      } catch (err) {\n        alert(err);\n      }\n    };\n    if (userData) {\n      traigoPacientes();\n    }\n  }, []);\n  //TRAYENDO PACIENTES {Final}\n\n  const [Paciente, setPaciente] = useState(\"\");\n  const [userData, setUserData] = useState([]);\n  const [Pacienteseleccionado, setPacienteseleccionado] = useState();\n  const [email, setEmail] = useState();\n  const [displayName, setDisplayName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [password, setPassword] = useState();\n  const [sex, setSex] = useState(\"\");\n  const [bornDate, setBornDate] = useState(\"\");\n  const [ocupation, setOcupation] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [currentCity, setCurrentCity] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [pastSurgery, setPastSurgery] = useState(\"\");\n  const [contactName, setContactName] = useState(\"\");\n  const [contactLastName, setContactLastName] = useState(\"\");\n  const [contactPhone, setContactPhone] = useState(\"\");\n  const [docuId, setDocuId] = useState();\n  const [laid, setLaid] = useState(\"\");\n  const userInfo = useSelector((state) => state);\n  const [doctorData, setDoctorData] = useState(null);\n\n  const getUserInfo = async () => {\n    try {\n      const config = {\n        headers: {\n          \"content-type\": \"application/json\",\n          \"x-auth-token\": userInfo.userInfo.token,\n        },\n      };\n      const res = await axios.get(\n        \"http://ec2-18-218-144-116.us-east-2.compute.amazonaws.com/users/\",\n        config\n      );\n      setDoctorData(res.data);\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  useEffect(() => {\n    if (userInfo) {\n      getUserInfo();\n    }\n  }, []);\n\n  //MARCA XII\n\n  //DECLARANDO OPTIONS {INICIO}\n\n  const options = userData.map((elemento) => {\n    return {\n      value: `${elemento._id}`,\n      label: `${elemento.displayName} ${elemento.lastName}`,\n    };\n  });\n  //console.log(options)\n  //DECLARANDO OPTIONS {FIN}\n\n  // const prueba = userData.map(elemento=>elemento._id)\n  // console.log(prueba)\n\n  //Función para mostrar pacientes {Inicio}\n  const PacienteAmostrar = (e) => {\n    try {\n      setPacienteseleccionado(userData.filter((x) => x._id === `${Paciente}`));\n      console.log(Pacienteseleccionado[0]);\n      setDisplayName(Pacienteseleccionado[0].displayName);\n      setLastName(Pacienteseleccionado[0].lastName);\n      setDocuId(Pacienteseleccionado[0].docuId);\n      setSex(Pacienteseleccionado[0].sex);\n      setBornDate(Pacienteseleccionado[0].bornDate);\n      setOcupation(Pacienteseleccionado[0].ocupation);\n      setCountry(Pacienteseleccionado[0].country);\n      setCity(Pacienteseleccionado[0].city);\n      setCurrentCity(Pacienteseleccionado[0].currentCity);\n      setAddress(Pacienteseleccionado[0].address);\n      setPhone(Pacienteseleccionado[0].phone);\n      setPastSurgery(Pacienteseleccionado[0].pastSurgery);\n      setContactName(Pacienteseleccionado[0].contactName);\n      setContactLastName(Pacienteseleccionado[0].contactLastName);\n      setContactPhone(Pacienteseleccionado[0].contactPhone);\n    } catch (err) {\n      console.log(\"Intenta de nuevo\");\n    }\n  };\n  //Función para mostrar pacientes {Final}\n\n  //Marca XX\n\n  //Marco\n\n  const Add = options.map((Add) => Add);\n  const handleAddrTypeChange = (e) => setPaciente(e.target.value);\n\n  //Hasta aquí todo bien....\n  //Marca de Agua\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <div>\n          {/* < select\n          onChange={e => handleAddrTypeChange(e)}>\n          {\n          Add.map((address, key) => <option value={key}>{address}</option>)\n          }\n          </select >) */}\n          <div className=\"El-buscador\">\n            <select\n              className=\"Seleccion-Paciente\"\n              onChange={(e) => handleAddrTypeChange(e)}\n            >\n              {Add.map((elemento) => (\n                <option value={elemento.value}>{elemento.label}</option>\n              ))}\n            </select>\n            <button className=\"Boton\" onClick={PacienteAmostrar}>\n              BUSCAR PACIENTE\n            </button>\n          </div>\n\n      </div>\n      <div>\n      <div>\n        <div className=\"nombres1\">\n          Conozca historia clínica del paciente.\n        </div>\n\n        <div className=\"sectionTitle\">Datos personales:</div>\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              htmlFor=\"email\"\n              className=\"nombres1\"\n            >\n              Nombres\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              value={displayName}\n\n              style={{ width: 300, marginBottom: 20 }}\n            />\n          </div>\n          <div>\n            <div>\n              <InputLabel\n                style={{\n                  fontFamily: \"Jost\",\n                  color: \"black\",\n                  fontSize: \"14.5px\",\n                  margin: 5,\n                }}\n                className=\"nombres1\"\n              >\n                Apellidos\n              </InputLabel>\n\n              <TextField\n                variant=\"outlined\"\n                value={lastName}\n\n                style={{ width: 300, marginBottom: 50 }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Documento de identidad (sin puntos){\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              value={docuId}\n\n              style={{ width: 300, marginBottom: 50 }}\n            />\n          </div>\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Sexo\n            </InputLabel>\n            <Select\n              native\n              value={sex}\n\n              style={{ width: 300, marginBottom: 50 }}\n            >\n              <option aria-label=\"Seleccionar\" value=\"Seleccionar\" />\n              <option value={\"Femenino\"} style={{ cursor: \"pointer\" }}>\n                Femenino\n              </option>\n              <option value={\"Masculino\"} style={{ cursor: \"pointer\" }}>\n                Masculino\n              </option>\n            </Select>\n          </div>\n        </div>\n\n        <div className=\"form\">\n          \n\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Ocupación{\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              value={ocupation}\n              style={{ width: 300, marginBottom: 50 }}\n            />\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              País de Nacimiento\n            </InputLabel>\n\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={country}\n\n            />\n          </div>\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Ciudad de Nacimiento\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={city}\n\n            />\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Ciudad Actual\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={currentCity}\n\n            />\n          </div>\n\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Dirección de Domicilio\n            </InputLabel>\n\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={address}\n\n            />\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Teléfono / Celular\n            </InputLabel>\n\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={phone}\n\n            />\n          </div>\n        </div>\n\n        <div className=\"sectionTitle\">Antecedentes del paciente:</div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Cirugías Anteriores{\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={pastSurgery}\n\n            />\n          </div>\n        </div>\n\n        <div className=\"sectionTitle\">Datos de contacto:</div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Nombres{\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={contactName}\n\n            />\n          </div>\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Apellidos\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={contactLastName}\n\n            />\n          </div>\n        </div>\n\n        <div className=\"form\">\n          <div>\n            <InputLabel\n              style={{\n                fontFamily: \"Jost\",\n                color: \"black\",\n                fontSize: \"14.5px\",\n                margin: 5,\n              }}\n              className=\"nombres1\"\n            >\n              Teléfono / Celular{\" \"}\n            </InputLabel>\n            <TextField\n              variant=\"outlined\"\n              style={{ width: 300, marginBottom: 50 }}\n              value={contactPhone}\n\n            />\n          </div>\n        </div>\n        <div className=\"form\" style={{ justifyContent: \"center\" }}>\n\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n/* <select name=\"selección\">\n          {userData.map(elemento=>(\n            <option key={elemento.id} value={elemento.id}>{elemento.displayName + \" \" + elemento.lastName}</option>\n          ))}\n          \n        </select> */\nexport default withRouter(History);\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Input, InputLabel } from \"@material-ui/core\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport * as ROUTES from \"../../Routes/Routes.js\";\nimport Navigation from \"../NavBar/Navigation\";\nimport Add from \"./Add\";\nimport History from \"./History\";\nimport Select from \"react-select\";\n\n//PUNTO DE REFERENCIA I\n\nfunction Main(props) {\n  const [isHistoryOpen, setIsHistoryOpen] = useState(true);\n  const options = [\n    { value: \"PACIENTE 1\", label: \"PACIENTE 1\" },\n    { value: \"PACIENTE 2\", label: \"PACIENTE 2\" },\n    { value: \"PACIENTE 3\", label: \"PACIENTE 3\" },\n  ];\n  \n  const MyComponent = () => <Select options={options} />;\n  \n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <Navigation />\n      <div className=\"wrapper2\">\n        <div className=\"blue2\">\n          <div className=\"content11\">Buscar o añadir paciente</div>\n\n          <div className=\"content22\">\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: \"2fr 1fr 1fr \",\n                width: \"100%\",\n              }}\n            >\n              <button\n                className=\"buttonstat2\"\n                onClick={() => setIsHistoryOpen(true)}\n              >\n                Buscar Paciente\n              </button>\n              <button\n                className=\"buttonAñadir\"\n                onClick={() => setIsHistoryOpen(false)}\n              >\n                Añadir paciente +\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"white\">\n          {isHistoryOpen == true ? <History /> : <Add />}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Main);\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport HomePage from \"./Components/HomePage/index\";\nimport Register from \"./Components/Register/Register\";\nimport Stats from \"./Components/Stats/Stats\";\nimport History from \"./Components/History/Main\";\nimport { CssBaseline, CircularProgress } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport UserContext from \"./Context/context\";\nimport Axios from \"axios\";\n\n//Punto de referencia I\nfunction App(props) {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined,\n  });\n\n\n  return (\n    <UserContext.Provider value={{ userData, setUserData }}>\n      <div>\n        <CssBaseline />\n        <Router basename=\"Medicine\">\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/registro\" component={Register} />\n            <Route exact path=\"/estadisticas\" component={Stats} />\n            <Route exact path=\"/historia-clinica\" component={History} />\n          </Switch>\n        </Router>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\n\n//REDUCER\n\nconst initialState = {\n  currentUser: {},\n  loading: true,\n  token: \"\",\n};\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return { ...state, token: action.payload };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\n\nconst allReducer = combineReducers({\n  userInfo: userReducer,\n});\n\nexport default allReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport allReducer from \"./Components/Reducer\";\n\n//STORE\nconst store = createStore(\n  allReducer,\n  window._REDUX_DEVTOOLS_EXTENSION_ && window._REDUX_DEVTOOLS_EXTENSION_()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}